// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/database/database.go
//
// Generated by this command:
//
//	mockgen -source=pkg/database/database.go -destination=pkg/mock/database.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockDatabaseInterractor is a mock of DatabaseInterractor interface.
type MockDatabaseInterractor struct {
	ctrl     *gomock.Controller
	recorder *MockDatabaseInterractorMockRecorder
}

// MockDatabaseInterractorMockRecorder is the mock recorder for MockDatabaseInterractor.
type MockDatabaseInterractorMockRecorder struct {
	mock *MockDatabaseInterractor
}

// NewMockDatabaseInterractor creates a new mock instance.
func NewMockDatabaseInterractor(ctrl *gomock.Controller) *MockDatabaseInterractor {
	mock := &MockDatabaseInterractor{ctrl: ctrl}
	mock.recorder = &MockDatabaseInterractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDatabaseInterractor) EXPECT() *MockDatabaseInterractorMockRecorder {
	return m.recorder
}

// GetVirtualExpireIndexes mocks base method.
func (m *MockDatabaseInterractor) GetVirtualExpireIndexes(arg0 int) (map[string]bool, map[string]uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVirtualExpireIndexes", arg0)
	ret0, _ := ret[0].(map[string]bool)
	ret1, _ := ret[1].(map[string]uint64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetVirtualExpireIndexes indicates an expected call of GetVirtualExpireIndexes.
func (mr *MockDatabaseInterractorMockRecorder) GetVirtualExpireIndexes(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVirtualExpireIndexes", reflect.TypeOf((*MockDatabaseInterractor)(nil).GetVirtualExpireIndexes), arg0)
}
